{"version":3,"sources":["components/FiltersArea/FiltersArea.js","components/SearchBox/SearchBox.js","App.js","index.js"],"names":["FiltersArea","props","handlePriceSelect","selectedPrice","setState","price","handleCategorySelect","values","categorySelectedValues","handleApplyClick","selectedCategories","state","map","a","value","undefined","selectedValues","concat","handleDiscardClick","clearInput","categories","label","prices","Form","Row","className","Col","this","categoryLabel","isMulti","options","onChange","priceLabel","Button","variant","onClick","applyButtonLabel","discardButtonLabel","item","key","React","Component","SearchBox","handleSearchInput","e","searchInput","target","handleClick","filtersIsOpen","searchLabel","filtersLabel","fetch","then","res","json","data","searchPhraseLabel","filtersButtonLabel","htmlFor","FormControl","id","aria-describedby","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee4ee0ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\n\r\n\r\nclass FiltersArea extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      price: [],\r\n      categorySelectedValues: [],\r\n      selectedValues: []\r\n    }\r\n    this.categories = [{value:'AM', label:'AM'},{value:'RT', label:'RT'},{value:'ML', label:'ML'},{value:'SX', label:'SX'},{value:'MG', label:'MG'}]\r\n    this.prices = [{value:'low', label:'Low'},{value:'medium', label:'Medium'},{value:'high', label:'High'}]\r\n  };\r\n\r\n  handlePriceSelect = (selectedPrice) => {    \r\n    this.setState({price: selectedPrice});   \r\n  }\r\n\r\n  handleCategorySelect = (values) => {      \r\n    this.setState({categorySelectedValues: values});   \r\n  }\r\n\r\n  handleApplyClick = () => {\r\n    const selectedCategories = this.state.categorySelectedValues.map(a => a.value);\r\n    if (this.state.price.value !== undefined) {\r\n      this.setState({selectedValues: selectedCategories.concat(this.state.price.value)});\r\n    } else {\r\n      this.setState({selectedValues: selectedCategories});\r\n    }    \r\n  }\r\n\r\n  handleDiscardClick = () => {\r\n    this.setState({\r\n            selectedValues: [],\r\n            price:  [],\r\n            categorySelectedValues: []\r\n          });  \r\n    this.props.clearInput();  \r\n  }\r\n\r\n  render() {\r\n      return(\r\n        <section>\r\n          <Form.Row className=\"row\">\r\n              <Col>\r\n                  <label>{this.props.categoryLabel}</label>\r\n                  <Select isMulti value={this.state.categorySelectedValues} options={this.categories} onChange={this.handleCategorySelect} />\r\n              </Col>          \r\n              <Col>\r\n                  <label>{this.props.priceLabel}</label>\r\n                  <Select value={this.state.price} options={this.prices} onChange={this.handlePriceSelect} />\r\n              </Col>\r\n          </Form.Row>\r\n           \r\n          <Form.Row className=\"row\">          \r\n            <Button \r\n                className=\"apply-button\" \r\n                variant=\"primary\" \r\n                onClick={this.handleApplyClick}\r\n                >\r\n                  {this.props.applyButtonLabel}\r\n            </Button>\r\n            <Button \r\n                className=\"discard-button\"\r\n                variant=\"primary\" \r\n                onClick={this.handleDiscardClick}\r\n                >\r\n                  {this.props.discardButtonLabel}\r\n            </Button>            \r\n          </Form.Row>\r\n          <Form.Row>\r\n              { this.state.selectedValues[0] !== undefined &&  this.state.selectedValues.map(item => <div key={item + 1} className=\"criterion\">#{item}</div>) }     \r\n          </Form.Row>              \r\n        </section>\r\n      )\r\n  }\r\n};\r\n\r\nexport default FiltersArea;","import React from 'react';\r\nimport FiltersArea from \"../FiltersArea/FiltersArea\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Form, Col, FormControl } from 'react-bootstrap';\r\n\r\nclass SearchBox extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            searchInput: '',\r\n            filtersIsOpen: false,\r\n            searchLabel: [],\r\n            filtersLabel:[],\r\n            categoryLabel:[],\r\n            priceLabel:[],\r\n            applyButtonLabel:[],\r\n            discardButtonLabel:[]\r\n        };        \r\n    }   \r\n\r\n    componentDidMount() {\r\n        fetch(\"fields.json\")\r\n        .then(res => res.json())\r\n        .then(data => {             \r\n            this.setState({ \r\n                searchLabel: data.searchPhraseLabel.value,\r\n                filtersLabel: data.filtersButtonLabel.value,\r\n                categoryLabel: data.categoryLabel.value, \r\n                priceLabel: data.priceLabel.value, \r\n                applyButtonLabel: data.applyButtonLabel.value,\r\n                discardButtonLabel: data.discardButtonLabel.value\r\n            });\r\n            \r\n        })                \r\n    }    \r\n\r\n    handleSearchInput = (e) => {\r\n        this.setState({searchInput: e.target.value});\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({filtersIsOpen: !this.state.filtersIsOpen});\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({searchInput: ''});\r\n    } \r\n\r\n    render(){\r\n\r\n        return( \r\n            <Form className=\"form\">                \r\n                <Form.Row className=\"row\">\r\n                    <Col>\r\n                        <label htmlFor=\"search-input\">{this.state.searchLabel}</label>\r\n                        <FormControl id=\"search-input\" value = {this.state.searchInput} aria-describedby=\"basic-addon3\" onChange={this.handleSearchInput}/>                        \r\n                    </Col>\r\n                    <Col>\r\n                        <Button className=\"filters-btn\" variant=\"primary\" onClick={this.handleClick}>{this.state.filtersLabel}</Button> \r\n                    </Col>\r\n                </Form.Row>\r\n\r\n                { this.state.filtersIsOpen && <FiltersArea \r\n                                                    categoryLabel={this.state.categoryLabel} \r\n                                                    priceLabel={this.state.priceLabel} \r\n                                                    applyButtonLabel={this.state.applyButtonLabel}\r\n                                                    discardButtonLabel={this.state.discardButtonLabel}\r\n                                                    clearInput={this.clearInput}\r\n                                                    /> }   \r\n            </Form>          \r\n                       \r\n        )\r\n    }\r\n}\r\n \r\n\r\nexport default SearchBox;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nfunction App() {\n  return (\n    <SearchBox />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}